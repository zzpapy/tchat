<div class="cube1">
	<h2>le Design Pattern Modèle Vue Controleur (MVC)</h2>
	<p>
		le Design Pattern Modèle Vue Controleur (MVC)

		Une architecture MVC cherche à séparer trois choses : le Modèle, les Vues et les Contrôleurs. Les contrôleurs permettent de répondre aux actions de l'utilisateur. Chaque contrôle est associé à une vue : cette dernière permet de présenter l'information retournée à l'utilisateur. Bien entendu, l'information renvoyée est dépendante des actions d'entrées de l'utilisateur (capturées par les contrôleurs, nous venons de le dire). Les liens (les traitements) sont réalisés par le modèle (la logique métier).

		On peut appliquer une architecture MVC à de nombreux cas de mise en ?uvre de systèmes informatiques : infographie, applications, ? Bien entendu, on peut aussi appliquer cette architecture à la mise en ?uvre d'une application Web.

		Il est aussi intéressant de noter que dans une équipe de développement de site Web, on peut noter, au moins, deux types d'informaticiens. Les développeurs à proprement parler : ils ont pour tâche l'implémentation du système. Mais, il y aussi les infographistes : ils sont peut-être familiarisés avec HTML ou les feuilles de styles CSS, mais du code peut éventuellement les rebuter.

		Via ce type d'architectures, chacun intervient donc sur un type de fichier qui lui est familier.
	</p>
	<p>
		<h3>Le MVC 2</h3>

		Dans le but d'améliorer ce point, certains préfèrent implémenter une architecture MVC 2. Dans une telle architecture, il n'existe plus qu'un seul et unique contrôleur réceptionnant toutes les requêtes clientes.

		Mais outre les possibilités du système utilisé, il faut souvent aussi considérer sa "durée de vie" et donc sa maintenance.

		Le contrôleur unique devient le point d?entrée exclusif de l?application. Il devient alors très aisé de centraliser la gestion des accès, des droits, des statistiques ou de toute autre fonctionnalité transverse.
</div>